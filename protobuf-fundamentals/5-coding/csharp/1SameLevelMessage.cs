// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: 1-same-level-message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from 1-same-level-message.proto</summary>
public static partial class 1SameLevelMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for 1-same-level-message.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static 1SameLevelMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChoxLXNhbWUtbGV2ZWwtbWVzc2FnZS5wcm90byKoAgoGUGVyc29uEgsKA2Fn",
          "ZRgBIAEoBRISCgpmaXJzdF9uYW1lGAIgASgJEhEKCWxhc3RfbmFtZRgDIAEo",
          "CRIVCg1zbWFsbF9waWN0dXJlGAQgASgMEhsKE2lzX3Byb2ZpbGVfdmVyaWZp",
          "ZWQYBSABKAgSDgoGaGVpZ2h0GAYgASgCEhUKDXBob25lX251bWJlcnMYByAD",
          "KAkSJQoKZXllX2NvbG91chgIIAEoDjIRLlBlcnNvbi5FeWVDb2xvdXISFwoI",
          "YmlydGhkYXkYCSABKAsyBS5EYXRlIk8KCUV5ZUNvbG91chIWChJVTktOT1dO",
          "X0VZRV9DT0xPVVIQABINCglFWUVfR1JFRU4QARINCglFWUVfQlJPV04QAhIM",
          "CghFWUVfQkxVRRADIjAKBERhdGUSDAoEeWVhchgBIAEoBRINCgVtb250aBgC",
          "IAEoBRILCgNkYXkYAyABKAViBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Person), global::Person.Parser, new[]{ "Age", "FirstName", "LastName", "SmallPicture", "IsProfileVerified", "Height", "PhoneNumbers", "EyeColour", "Birthday" }, null, new[]{ typeof(global::Person.Types.EyeColour) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Date), global::Date.Parser, new[]{ "Year", "Month", "Day" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// Person is used to identify users
/// across our system 
/// </summary>
public sealed partial class Person : pb::IMessage<Person> {
  private static readonly pb::MessageParser<Person> _parser = new pb::MessageParser<Person>(() => new Person());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Person> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::1SameLevelMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Person() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Person(Person other) : this() {
    age_ = other.age_;
    firstName_ = other.firstName_;
    lastName_ = other.lastName_;
    smallPicture_ = other.smallPicture_;
    isProfileVerified_ = other.isProfileVerified_;
    height_ = other.height_;
    phoneNumbers_ = other.phoneNumbers_.Clone();
    eyeColour_ = other.eyeColour_;
    birthday_ = other.birthday_ != null ? other.birthday_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Person Clone() {
    return new Person(this);
  }

  /// <summary>Field number for the "age" field.</summary>
  public const int AgeFieldNumber = 1;
  private int age_;
  /// <summary>
  /// the age as of the person's creation
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Age {
    get { return age_; }
    set {
      age_ = value;
    }
  }

  /// <summary>Field number for the "first_name" field.</summary>
  public const int FirstNameFieldNumber = 2;
  private string firstName_ = "";
  /// <summary>
  /// the first name as documented in the signup form
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirstName {
    get { return firstName_; }
    set {
      firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "last_name" field.</summary>
  public const int LastNameFieldNumber = 3;
  private string lastName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LastName {
    get { return lastName_; }
    set {
      lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "small_picture" field.</summary>
  public const int SmallPictureFieldNumber = 4;
  private pb::ByteString smallPicture_ = pb::ByteString.Empty;
  /// <summary>
  /// small_picture represents a small .jpg file
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString SmallPicture {
    get { return smallPicture_; }
    set {
      smallPicture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_profile_verified" field.</summary>
  public const int IsProfileVerifiedFieldNumber = 5;
  private bool isProfileVerified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsProfileVerified {
    get { return isProfileVerified_; }
    set {
      isProfileVerified_ = value;
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 6;
  private float height_;
  /// <summary>
  /// height of person in cms
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Height {
    get { return height_; }
    set {
      height_ = value;
    }
  }

  /// <summary>Field number for the "phone_numbers" field.</summary>
  public const int PhoneNumbersFieldNumber = 7;
  private static readonly pb::FieldCodec<string> _repeated_phoneNumbers_codec
      = pb::FieldCodec.ForString(58);
  private readonly pbc::RepeatedField<string> phoneNumbers_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// a list of phone numbers is optional to provide at signup
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> PhoneNumbers {
    get { return phoneNumbers_; }
  }

  /// <summary>Field number for the "eye_colour" field.</summary>
  public const int EyeColourFieldNumber = 8;
  private global::Person.Types.EyeColour eyeColour_ = global::Person.Types.EyeColour.UnknownEyeColour;
  /// <summary>
  /// This is an enum, as defined above
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Person.Types.EyeColour EyeColour {
    get { return eyeColour_; }
    set {
      eyeColour_ = value;
    }
  }

  /// <summary>Field number for the "birthday" field.</summary>
  public const int BirthdayFieldNumber = 9;
  private global::Date birthday_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Date Birthday {
    get { return birthday_; }
    set {
      birthday_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Person);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Person other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Age != other.Age) return false;
    if (FirstName != other.FirstName) return false;
    if (LastName != other.LastName) return false;
    if (SmallPicture != other.SmallPicture) return false;
    if (IsProfileVerified != other.IsProfileVerified) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
    if(!phoneNumbers_.Equals(other.phoneNumbers_)) return false;
    if (EyeColour != other.EyeColour) return false;
    if (!object.Equals(Birthday, other.Birthday)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Age != 0) hash ^= Age.GetHashCode();
    if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
    if (LastName.Length != 0) hash ^= LastName.GetHashCode();
    if (SmallPicture.Length != 0) hash ^= SmallPicture.GetHashCode();
    if (IsProfileVerified != false) hash ^= IsProfileVerified.GetHashCode();
    if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
    hash ^= phoneNumbers_.GetHashCode();
    if (EyeColour != global::Person.Types.EyeColour.UnknownEyeColour) hash ^= EyeColour.GetHashCode();
    if (birthday_ != null) hash ^= Birthday.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Age != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Age);
    }
    if (FirstName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(FirstName);
    }
    if (LastName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LastName);
    }
    if (SmallPicture.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(SmallPicture);
    }
    if (IsProfileVerified != false) {
      output.WriteRawTag(40);
      output.WriteBool(IsProfileVerified);
    }
    if (Height != 0F) {
      output.WriteRawTag(53);
      output.WriteFloat(Height);
    }
    phoneNumbers_.WriteTo(output, _repeated_phoneNumbers_codec);
    if (EyeColour != global::Person.Types.EyeColour.UnknownEyeColour) {
      output.WriteRawTag(64);
      output.WriteEnum((int) EyeColour);
    }
    if (birthday_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Birthday);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Age != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
    }
    if (FirstName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
    }
    if (LastName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
    }
    if (SmallPicture.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SmallPicture);
    }
    if (IsProfileVerified != false) {
      size += 1 + 1;
    }
    if (Height != 0F) {
      size += 1 + 4;
    }
    size += phoneNumbers_.CalculateSize(_repeated_phoneNumbers_codec);
    if (EyeColour != global::Person.Types.EyeColour.UnknownEyeColour) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EyeColour);
    }
    if (birthday_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Birthday);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Person other) {
    if (other == null) {
      return;
    }
    if (other.Age != 0) {
      Age = other.Age;
    }
    if (other.FirstName.Length != 0) {
      FirstName = other.FirstName;
    }
    if (other.LastName.Length != 0) {
      LastName = other.LastName;
    }
    if (other.SmallPicture.Length != 0) {
      SmallPicture = other.SmallPicture;
    }
    if (other.IsProfileVerified != false) {
      IsProfileVerified = other.IsProfileVerified;
    }
    if (other.Height != 0F) {
      Height = other.Height;
    }
    phoneNumbers_.Add(other.phoneNumbers_);
    if (other.EyeColour != global::Person.Types.EyeColour.UnknownEyeColour) {
      EyeColour = other.EyeColour;
    }
    if (other.birthday_ != null) {
      if (birthday_ == null) {
        Birthday = new global::Date();
      }
      Birthday.MergeFrom(other.Birthday);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Age = input.ReadInt32();
          break;
        }
        case 18: {
          FirstName = input.ReadString();
          break;
        }
        case 26: {
          LastName = input.ReadString();
          break;
        }
        case 34: {
          SmallPicture = input.ReadBytes();
          break;
        }
        case 40: {
          IsProfileVerified = input.ReadBool();
          break;
        }
        case 53: {
          Height = input.ReadFloat();
          break;
        }
        case 58: {
          phoneNumbers_.AddEntriesFrom(input, _repeated_phoneNumbers_codec);
          break;
        }
        case 64: {
          EyeColour = (global::Person.Types.EyeColour) input.ReadEnum();
          break;
        }
        case 74: {
          if (birthday_ == null) {
            Birthday = new global::Date();
          }
          input.ReadMessage(Birthday);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Person message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    /// <summary>
    /// We currently only consider 3 eye colours
    /// </summary>
    public enum EyeColour {
      [pbr::OriginalName("UNKNOWN_EYE_COLOUR")] UnknownEyeColour = 0,
      [pbr::OriginalName("EYE_GREEN")] EyeGreen = 1,
      [pbr::OriginalName("EYE_BROWN")] EyeBrown = 2,
      [pbr::OriginalName("EYE_BLUE")] EyeBlue = 3,
    }

  }
  #endregion

}

public sealed partial class Date : pb::IMessage<Date> {
  private static readonly pb::MessageParser<Date> _parser = new pb::MessageParser<Date>(() => new Date());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Date> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::1SameLevelMessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Date() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Date(Date other) : this() {
    year_ = other.year_;
    month_ = other.month_;
    day_ = other.day_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Date Clone() {
    return new Date(this);
  }

  /// <summary>Field number for the "year" field.</summary>
  public const int YearFieldNumber = 1;
  private int year_;
  /// <summary>
  /// Year of date. Must be from 1 to 9999, or 0 if specifying a date without a
  /// year.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Year {
    get { return year_; }
    set {
      year_ = value;
    }
  }

  /// <summary>Field number for the "month" field.</summary>
  public const int MonthFieldNumber = 2;
  private int month_;
  /// <summary>
  /// Month of year. Must be from 1 to 12.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Month {
    get { return month_; }
    set {
      month_ = value;
    }
  }

  /// <summary>Field number for the "day" field.</summary>
  public const int DayFieldNumber = 3;
  private int day_;
  /// <summary>
  /// Day of Month. Must be from 1 to 31.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Day {
    get { return day_; }
    set {
      day_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Date);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Date other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Year != other.Year) return false;
    if (Month != other.Month) return false;
    if (Day != other.Day) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Year != 0) hash ^= Year.GetHashCode();
    if (Month != 0) hash ^= Month.GetHashCode();
    if (Day != 0) hash ^= Day.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Year != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Year);
    }
    if (Month != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Month);
    }
    if (Day != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Day);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Year != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
    }
    if (Month != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
    }
    if (Day != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Date other) {
    if (other == null) {
      return;
    }
    if (other.Year != 0) {
      Year = other.Year;
    }
    if (other.Month != 0) {
      Month = other.Month;
    }
    if (other.Day != 0) {
      Day = other.Day;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Year = input.ReadInt32();
          break;
        }
        case 16: {
          Month = input.ReadInt32();
          break;
        }
        case 24: {
          Day = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
